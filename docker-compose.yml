version: "v2.23.0"

#networks:
#  tiktok:
#    driver: bridge


services:

  etcd:
    image: bitnami/etcd:3.5
    container_name: etcd
    ports:
      - 2379:2379
      - 2380:2380
    volumes:
      - ./etcd/data:/bitnami/etcd-data
    environment:
      - TZ=Asia/Shanghai
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    network_mode: "bridge"


  minio:
    container_name: minio
    image: minio/minio:RELEASE.2021-06-17T00-10-46Z
    restart: always
    ports:
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    network_mode: "bridge"


  mysql:
    container_name: mysqld
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_USER: user
      MYSQL_PASSWORD: 123456
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: videoWebsite
    privileged: true
    ports:
      - "3306:3306"
    network_mode: "bridge"


  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    network_mode: "bridge"


  redis:
    container_name: redis
    image: redis:7.2.3
    restart: always
    ports:
      - "6379:6379"
    network_mode: "bridge"


  prometheus:
    image: prom/prometheus:latest
    container_name: "prometheus"
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana
    container_name: "grafana"
    ports:
      - "3000:3000"
    restart: always




#  user:
#    build:
#      context: .
#      dockerfile: UserDockerfile
#    container_name: user-tiktok
#    depends_on:
#      - mysql
#      - minio
#      - redis
#      - etcd
#    ports:
#      - "8881:8881"
#    network_mode: "bridge"


#  video:
#    build:
#      context: .
#      dockerfile: VideoDockerfile
#    container_name: video-tiktok
#    depends_on:
#      - mysql
#      - minio
#      - redis
#      - etcd
#    ports:
#      - "8882:8882"
#    volumes:
#      - C:/Users/zhuang:/usr/local/data
#    network_mode: "bridge"
#
#
#  interaction:
#    build:
#      context: .
#      dockerfile: InteractionDockerfile
#    container_name: interaction-tiktok
#    depends_on:
#      - mysql
#      - minio
#      - redis
#      - etcd
#    ports:
#      - "8883:8883"
#    network_mode: "bridge"


#  follow:
#    build:
#      context: .
#      dockerfile: FollowDockerfile
#    container_name: follow-tiktok
#    depends_on:
#      - mysql
#      - minio
#      - redis
#      - etcd
#    ports:
#      - "8884:8884"
#    network_mode: "bridge"
#
#  api:
#    build:
#      context: .
#      dockerfile: ApiDockerfile
#    container_name: api-tiktok
#    depends_on:
#        - mysql
#        - minio
#        - redis
#        - etcd
#    ports:
#        - "10001:10001"
#    volumes:
#      - C:/Users/zhuang:/usr/local/data
#    network_mode: "bridge"





#  web:
#    build:
#      context: .
#      dockerfile:
#        - UserDockerfile
#        - ApiDockerfile
#    container_name: web
#    depends_on:
#      - mysql
#      - redis
#      - minio
#      - etcd
#    ports:
#      - "8888:8888"
#    restart: always
#    volumes:
#      - C:/Users/zhuang:/usr/local/data
#    network_mode: "bridge"
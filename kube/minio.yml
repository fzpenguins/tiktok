apiVersion: v1
kind: PersistentVolume
metadata:
  name: minio-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  storageClassName: minio-storage
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/data/minio" # 请根据实际路径修改
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: minio-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: Immediate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
spec:
  storageClassName: minio-storage
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  labels:
    app: minio
spec:
  replicas: 1
  serviceName: minio
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:RELEASE.2021-06-17T00-10-46Z
        imagePullPolicy: Never
        env:
        - name: MINIO_ROOT_USER
          value: "minioadmin"
        - name: MINIO_ROOT_PASSWORD
          value: "minioadmin"
        args:
        - server
        - /data # 这是 Minio 数据存储的目录
        ports:
        - containerPort: 9000
        - containerPort: 9090
        volumeMounts:
        - name: minio-pv
          mountPath: /var/lib/minio
      volumes:
      - name: minio-pv
        persistentVolumeClaim:
          claimName: minio-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: minio
spec:
  selector:
    app: minio
  ports:
  - name: minio
    protocol: TCP
    port: 9000
    targetPort: 9000
    nodePort: 30009
  - name: management-ui
    protocol: TCP
    port: 9090
    targetPort: 9090
    nodePort: 30010
  type: NodePort
